{
  parserClass               = "mobi.hsz.idea.gitignore.parser.DockerignoreParser"
  parserUtilClass           = "mobi.hsz.idea.gitignore.parser.IgnoreParserUtil"

  extends                   = "mobi.hsz.idea.gitignore.psi.IgnoreElementImpl"
 
  psiClassPrefix            = "Ignore"
  psiImplClassSuffix        = "Impl"
  psiPackage                = "mobi.hsz.idea.gitignore.psi"
  psiImplPackage            = "mobi.hsz.idea.gitignore.psi.impl"

  elementTypeHolderClass    = "mobi.hsz.idea.gitignore.psi.dockerignore.DockerignoreTypes"
  elementTypeClass          = "mobi.hsz.idea.gitignore.psi.dockerignore.DockerignoreElementType"
  tokenTypeClass            = "mobi.hsz.idea.gitignore.psi.dockerignore.DockerignoreTokenType"
 
  tokens = [
    CRLF                    = "regexp:[\s\r\n]+"
    HEADER                  = "regexp:###.*"
    SECTION                 = "regexp:##.*"
    COMMENT                 = "regexp:#.*"
    BRACKET_LEFT            = "regexp:(?!\\\[)\["
    BRACKET_RIGHT           = "regexp:(?!\\\])\]"
    SLASH                   = "/"
    VALUE                   = "regexp:(?![!#\s])(?![\[\]])(?:(?:\\[\[\]])|(?:\/\/)|[^\[\]\/\s])+"
  ]

  mixin("ENTRY")            = "mobi.hsz.idea.gitignore.psi.impl.IgnoreEntryExtImpl"
  name("ENTRY.*")           = "entry"
}
 
gitignoreFile           ::= item_ *
private item_           ::= HEADER | SECTION | COMMENT | ENTRY_DIRECTORY | ENTRY_FILE | CRLF
NEGATION                ::= "!"
ENTRY_FILE              ::= NEGATION ? SLASH ? <<list_macro value_>>        { extends="ENTRY" }
ENTRY_DIRECTORY         ::= NEGATION ? SLASH ? <<list_macro value_>> SLASH  { extends="ENTRY_FILE" }
ENTRY                   ::= NEGATION ? SLASH ? <<list_macro value_>>

private meta bvalue_    ::= BRACKET_LEFT VALUE BRACKET_RIGHT                { pin="BRACKET_LEFT" }
private meta value_     ::= bvalue_ | VALUE
private meta list_macro ::= <<p>> + (SLASH <<p>> +) *
